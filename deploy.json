{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the key vault resource"
      }
    },
    "organization": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure DevOps Organization"
      }
    },
    "projectConfig": {
      "type": "array",
      "metadata": {
        "description": "JSON Config for projects"
      }
    }
  },
  "variables": {
    "Get Secret App Name": "get-secret-app",
    "Deploy Release App Name": "deploy-release-app",
    "Until Not In Progress App Name": "until-not-in-progress-app",
    "Get Release Definition App Name": "get-release-definition-app",
    "Get Release Status App Name": "get-release-status-app",
    "Release Env App Name": "release-env-app",
    "Release Apps": [
      {
        "app": "release-dev-app",
        "env": "dev"
      },
      {
        "app": "release-prod-app",
        "env": "prod"
      }
    ]
  },
  "resources": [
    {
      "name": "[parameters('vaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('Get Secret App Name'))]"
      ],
      "tags": {},
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[reference(resourceId('Microsoft.Logic/workflows', variables('Get Secret App Name')), '2017-07-01', 'Full').identity.tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Logic/workflows', variables('Get Secret App Name')), '2017-07-01', 'Full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get"
              ]
            }
          }
        ],
        "sku": {
          "family": "A",
          "name": "standard"
        }
      },
      "resources": []
    },
    {
      "name": "[variables('Get Secret App Name')]",
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "get-current-version": {
              "inputs": {
                "authentication": {
                  "audience": "https://vault.azure.net",
                  "type": "ManagedServiceIdentity"
                },
                "method": "GET",
                "uri": "https://@{parameters('vault-name')}.vault.azure.net/secrets/@{triggerBody()['secret']}?api-version=7.0"
              },
              "runAfter": {},
              "type": "Http"
            },
            "parse-version": {
              "inputs": {
                "content": "@body('get-current-version')",
                "schema": {
                  "properties": {
                    "attributes": {
                      "properties": {
                        "created": {
                          "type": "integer"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "recoveryLevel": {
                          "type": "string"
                        },
                        "updated": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "tags": {
                      "properties": {},
                      "type": "object"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "get-current-version": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            },
            "get-secret": {
              "inputs": {
                "authentication": {
                  "audience": "https://vault.azure.net",
                  "type": "ManagedServiceIdentity"
                },
                "method": "GET",
                "uri": "@{body('parse-version')['id']}?api-version=7.0"
              },
              "runAfter": {
                "parse-version": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "parse-secret": {
              "inputs": {
                "content": "@body('get-secret')",
                "schema": {
                  "properties": {
                    "attributes": {
                      "properties": {
                        "created": {
                          "type": "integer"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "recoveryLevel": {
                          "type": "string"
                        },
                        "updated": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "tags": {
                      "properties": {},
                      "type": "object"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "get-secret": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            },
            "response-secret": {
              "inputs": {
                "body": {
                  "value": "@body('parse-secret')?['value']"
                },
                "statusCode": 200
              },
              "kind": "http",
              "runAfter": {
                "parse-secret": [
                  "Succeeded"
                ]
              },
              "type": "Response"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {
            "vault-name": {
              "type": "string"
            }
          },
          "triggers": {
            "http-post": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "properties": {
                    "secret": {
                      "type": "string",
                      "required": true
                    }
                  },
                  "type": "object"
                },
                "method": "POST"
              }
            }
          }
        },
        "parameters": {
          "vault-name": {
            "value": "[parameters('vaultName')]"
          }
        }
      }
    },
    {
      "name": "[variables('Get Release Definition App Name')]",
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "pat-base64": {
              "type": "Compose",
              "inputs": "@base64(concat(':', triggerBody()?['pat']))",
              "runAfter": {}
            },
            "create-url": {
              "type": "Compose",
              "inputs": "https://vsrm.dev.azure.com/@{triggerBody()?['organization']}/@{triggerBody()?['project']}/_apis/release/definitions/@{triggerBody()?['releaseDefinitionId']}?api-version=5.0",
              "runAfter": {
                "pat-base64": [
                  "Succeeded"
                ]
              }
            },
            "HTTP": {
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "@{outputs('create-url')}",
                "headers": {
                  "Authorization": "Basic @{outputs('pat-base64')} "
                }
              },
              "runAfter": {
                "create-url": [
                  "Succeeded"
                ]
              }
            },
            "parse-response": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('HTTP')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "environments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "rank": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "rank"
                        ]
                      }
                    }
                  }
                }
              },
              "runAfter": {
                "HTTP": [
                  "Succeeded"
                ]
              }
            },
            "project-environments": {
              "inputs": {
                "from": "@body('parse-response')?['environments']",
                "select": {
                  "id": "@item()?['id']",
                  "name": "@item()?['name']",
                  "rank": "@item()?['rank']"
                }
              },
              "runAfter": {
                "parse-response": [
                  "Succeeded"
                ]
              },
              "type": "Select"
            },
            "Response-Success": {
              "type": "Response",
              "kind": "http",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "environments": "@body('project-environments')"
                }
              },
              "runAfter": {
                "project-environments": [
                  "Succeeded"
                ]
              }
            },
            "Response-Failure": {
              "type": "Response",
              "kind": "http",
              "inputs": {
                "statusCode": 503
              },
              "runAfter": {
                "HTTP": [
                  "Failed"
                ]
              }
            }
          },
          "parameters": {},
          "triggers": {
            "http-post": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pat": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "project": {
                      "type": "string"
                    },
                    "releaseDefinitionId": {
                      "type": "integer"
                    }
                  }
                },
                "method": "POST"
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {}
      }
    },
    {
      "name": "[variables('Deploy Release App Name')]",
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('Get Release Definition App Name'))]",
        "[resourceId('Microsoft.Logic/workflows', variables('Until Not In Progress App Name'))]"
      ],
      "tags": {},
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "triggers": {
            "http-post": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pat": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "project": {
                      "type": "string"
                    },
                    "releaseDefinitionId": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "variables": {
                      "type": "object"
                    }
                  }
                },
                "method": "POST"
              }
            }
          },
          "parameters": {},
          "actions": {
            "pat-base64": {
              "type": "Compose",
              "inputs": "@base64(concat(':', triggerBody()?['pat']))",
              "runAfter": {}
            },
            "create-url": {
              "type": "Compose",
              "inputs": "https://vsrm.dev.azure.com/@{triggerBody()?['organization']}/@{triggerBody()?['project']}/_apis/release/releases?api-version=5.0-preview.8",
              "runAfter": {
                "pat-base64": [
                  "Succeeded"
                ]
              }
            },
            "get-release-definition": {
              "inputs": {
                "body": {
                  "organization": "@triggerBody()?['organization']",
                  "pat": "@triggerBody()?['pat']",
                  "project": "@triggerBody()?['project']",
                  "releaseDefinitionId": "@triggerBody()?['releaseDefinitionId']"
                },
                "host": {
                  "triggerName": "http-post",
                  "workflow": {
                    "id": "[resourceId('Microsoft.Logic/workflows', variables('Get Release Definition App Name'))]"
                  }
                },
                "retryPolicy": {
                  "type": "none"
                }
              },
              "type": "Workflow",
              "runAfter": {
                "create-url": [
                  "Succeeded"
                ]
              }
            },
            "response-failure-get-release-definition": {
              "type": "Response",
              "kind": "http",
              "operationOptions": "Asynchronous",
              "inputs": {
                "statusCode": 503
              },
              "runAfter": {
                "get-release-definition": [
                  "Failed"
                ]
              }
            },
            "parse-release-response": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('get-release-definition')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "environments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "rank": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "rank"
                        ]
                      }
                    }
                  }
                }
              },
              "runAfter": {
                "get-release-definition": [
                  "Succeeded"
                ]
              }
            },
            "filter-environments": {
              "inputs": {
                "from": "@body('parse-release-response')?['environments']",
                "where": "@not(equals(item()['name'], triggerBody()?['environment']))"
              },
              "runAfter": {
                "parse-release-response": [
                  "Succeeded"
                ]
              },
              "type": "Query"
            },
            "initialize-manual-environements": {
              "inputs": {
                "variables": [
                  {
                    "name": "manualEnvironments",
                    "type": "Array",
                    "value": []
                  }
                ]
              },
              "runAfter": {
                "parse-release-response": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "for-each-environment": {
              "actions": {
                "append-to-manual-environments": {
                  "inputs": {
                    "name": "manualEnvironments",
                    "value": "@items('for-each-environment')['name']"
                  },
                  "runAfter": {},
                  "type": "AppendToArrayVariable"
                }
              },
              "foreach": "@body('filter-environments')",
              "runAfter": {
                "initialize-manual-environements": [
                  "Succeeded"
                ],
                "filter-environments": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "HTTP": {
              "type": "Http",
              "inputs": {
                "method": "POST",
                "uri": "@{outputs('create-url')}",
                "headers": {
                  "Authorization": "Basic @{outputs('pat-base64')} "
                },
                "body": {
                  "artifacts": [],
                  "definitionId": "@triggerBody()?['releaseDefinitionId']",
                  "description": "@triggerBody()?['description']",
                  "manualEnvironments": "@variables('manualEnvironments')",
                  "variables": "@triggerBody()?['variables']"
                }
              },
              "runAfter": {
                "for-each-environment": [
                  "Succeeded"
                ]
              }
            },
            "parse-response-id": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('HTTP')",
                "schema": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "HTTP": [
                  "Succeeded"
                ]
              }
            },
            "until-not-in-progress-app": {
              "inputs": {
                "body": {
                  "organization": "@triggerBody()?['organization']",
                  "pat": "@triggerBody()?['pat']",
                  "project": "@triggerBody()?['project']",
                  "environment": "@triggerBody()?['environment']",
                  "releaseId": "@body('parse-response-id')?['id']"
                },
                "host": {
                  "triggerName": "http-post",
                  "workflow": {
                    "id": "[resourceId('Microsoft.Logic/workflows', variables('Until Not In Progress App Name'))]"
                  }
                },
                "retryPolicy": {
                  "type": "none"
                }
              },
              "runAfter": {
                "parse-response-id": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            },
            "parse-until": {
              "inputs": {
                "content": "@body('until-not-in-progress-app')",
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "until-not-in-progress-app": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            },
            "if-success": {
              "actions": {
                "response-success": {
                  "inputs": {
                    "body": {
                      "releaseId": "@body('parse-response-id')?['id']"
                    },
                    "statusCode": 200
                  },
                  "kind": "http",
                  "operationOptions": "Asynchronous",
                  "runAfter": {},
                  "type": "Response"
                }
              },
              "else": {
                "actions": {
                  "response-failure-deploy": {
                    "inputs": {
                      "statusCode": 503
                    },
                    "kind": "http",
                    "operationOptions": "Asynchronous",
                    "runAfter": {},
                    "type": "Response"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@body('parse-until')?['success']",
                      "@true"
                    ]
                  }
                ]
              },
              "runAfter": {
                "parse-until": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "response-failure-http": {
              "type": "Response",
              "kind": "http",
              "operationOptions": "Asynchronous",
              "inputs": {
                "statusCode": 503
              },
              "runAfter": {
                "HTTP": [
                  "Failed"
                ]
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {}
      }
    },
    {
      "name": "[variables('Until Not In Progress App Name')]",
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('Get Release Status App Name'))]"
      ],
      "tags": {},
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "parameters": {},
          "triggers": {
            "http-post": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pat": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "project": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "releaseId": {
                      "type": "integer"
                    }
                  }
                },
                "method": "POST"
              }
            }
          },
          "actions": {
            "pat-base64": {
              "type": "Compose",
              "inputs": "@base64(concat(':', triggerBody()?['pat']))",
              "runAfter": {}
            },
            "until-not-in-progress": {
              "actions": {
                "delay": {
                  "inputs": {
                    "interval": {
                      "count": 1,
                      "unit": "Minute"
                    }
                  },
                  "runAfter": {},
                  "type": "Wait"
                },
                "get-release-status": {
                  "inputs": {
                    "body": {
                      "organization": "@triggerBody()?['organization']",
                      "pat": "@triggerBody()?['pat']",
                      "project": "@triggerBody()['project']",
                      "releaseId": "@triggerBody()?['releaseId']"
                    },
                    "host": {
                      "triggerName": "http-post",
                      "workflow": {
                        "id": "[resourceId('Microsoft.Logic/workflows', variables('Get Release Status App Name'))]"
                      }
                    },
                    "retryPolicy": {
                      "type": "none"
                    }
                  },
                  "runAfter": {
                    "delay": [
                      "Succeeded"
                    ]
                  },
                  "type": "Workflow"
                },
                "parse-get-release-status": {
                  "inputs": {
                    "content": "@body('get-release-status')",
                    "schema": {
                      "properties": {
                        "environments": {
                          "items": {
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "status"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {
                    "get-release-status": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson"
                },
                "filter-environments": {
                  "inputs": {
                    "from": "@body('parse-get-release-status')?['environments']",
                    "where": "@equals(item()?['name'], triggerBody()?['environment'])"
                  },
                  "runAfter": {
                    "parse-get-release-status": [
                      "Succeeded"
                    ]
                  },
                  "type": "Query"
                },
                "grab-status": {
                  "inputs": "@body('filter-environments')?[0]['status']",
                  "runAfter": {
                    "filter-environments": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                }
              },
              "expression": "@not(equals(outputs('grab-status'), 'inProgress'))",
              "limit": {
                "count": 60,
                "timeout": "PT1H"
              },
              "runAfter": {
                "pat-base64": [
                  "Succeeded"
                ]
              },
              "type": "Until"
            },
            "response": {
              "inputs": {
                "body": {
                  "success": "@if(equals(outputs('grab-status'), 'succeeded'), true, false)"
                },
                "statusCode": 200
              },
              "kind": "http",
              "operationOptions": "Asynchronous",
              "runAfter": {
                "until-not-in-progress": [
                  "Succeeded"
                ]
              },
              "type": "Response"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {}
      }
    },
    {
      "name": "[variables('Get Release Status App Name')]",
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {},
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "triggers": {
            "http-post": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pat": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "project": {
                      "type": "string"
                    },
                    "releaseId": {
                      "type": "integer"
                    }
                  }
                },
                "method": "POST"
              }
            }
          },
          "actions": {
            "HTTP": {
              "type": "Http",
              "inputs": {
                "method": "GET",
                "uri": "@{outputs('create-url')}",
                "headers": {
                  "Authorization": "Basic @{outputs('pat-base64')} "
                }
              },
              "runAfter": {
                "create-url": [
                  "Succeeded"
                ]
              }
            },
            "pat-base64": {
              "type": "Compose",
              "inputs": "@base64(concat(':', triggerBody()?['pat']))",
              "runAfter": {}
            },
            "create-url": {
              "type": "Compose",
              "inputs": "https://vsrm.dev.azure.com/@{triggerBody()?['organization']}/@{triggerBody()?['project']}/_apis/release/releases/@{triggerBody()?['releaseId']}?api-version=5.0-preview.8",
              "runAfter": {
                "pat-base64": [
                  "Succeeded"
                ]
              }
            },
            "Response-Success": {
              "type": "Response",
              "kind": "http",
              "inputs": {
                "statusCode": 200,
                "body": {
                  "id": "@body('parse-response-id')?['id']",
                  "name": "@{body('parse-response-id')?['name']}",
                  "status": "@{body('parse-response-id')?['status']}",
                  "environments": "@body('parse-response-environments')"
                }
              },
              "runAfter": {
                "parse-response-environments": [
                  "Succeeded"
                ]
              }
            },
            "parse-response-id": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('HTTP')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              },
              "runAfter": {
                "HTTP": [
                  "Succeeded"
                ]
              }
            },
            "Response-Failure": {
              "type": "Response",
              "kind": "http",
              "inputs": {
                "statusCode": 503
              },
              "runAfter": {
                "HTTP": [
                  "Failed"
                ]
              }
            },
            "parse-response-environments": {
              "type": "Select",
              "inputs": {
                "from": "@body('HTTP')['environments']",
                "select": {
                  "id": "@item().id",
                  "name": "@item().name",
                  "status": "@item().status",
                  "rank": "@item().rank"
                }
              },
              "runAfter": {
                "parse-response-id": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {},
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {}
      }
    },
    {
      "name": "[variables('Release Env App Name')]",
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('Deploy Release App Name'))]",
        "[resourceId('Microsoft.Logic/workflows', variables('Get Secret App Name'))]"
      ],
      "tags": {},
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "triggers": {
            "http-post": {
              "inputs": {
                "method": "POST",
                "schema": {
                  "properties": {
                    "env": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "env"
                  ],
                  "type": "object"
                }
              },
              "kind": "Http",
              "type": "Request"
            }
          },
          "actions": {
            "get-pat": {
              "inputs": {
                "body": {
                  "secret": "pat"
                },
                "host": {
                  "triggerName": "http-post",
                  "workflow": {
                    "id": "[resourceId('Microsoft.Logic/workflows', variables('Get Secret App Name'))]"
                  }
                }
              },
              "runAfter": {},
              "type": "Workflow"
            },
            "parse-pat": {
              "inputs": {
                "content": "@body('get-pat')",
                "schema": {
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "get-pat": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            },
            "init-errorProject": {
              "inputs": {
                "variables": [
                  {
                    "name": "errorProject",
                    "type": "String",
                    "value": ""
                  }
                ]
              },
              "runAfter": {},
              "type": "InitializeVariable"
            },
            "parse-project-configuration": {
              "inputs": {
                "content": "[parameters('projectConfig')]",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stage": {
                        "type": "string"
                      },
                      "releases": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "release": {
                              "type": "string"
                            },
                            "project": {
                              "type": "string"
                            },
                            "releaseDefinitionId": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "release",
                            "project",
                            "releaseDefinitionId"
                          ]
                        }
                      }
                    },
                    "required": [
                      "stage",
                      "releases"
                    ]
                  }
                }
              },
              "runAfter": {},
              "type": "ParseJson"
            },
            "for-each-stage": {
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              },
              "actions": {
                "current-stage": {
                  "inputs": "@items('for-each-stage')",
                  "runAfter": {},
                  "type": "Compose"
                },
                "for-each-release": {
                  "runtimeConfiguration": {
                    "concurrency": {
                      "repetitions": 5
                    }
                  },
                  "actions": {
                    "if-release-error-release-level": {
                      "actions": {
                        "current-release": {
                          "inputs": "@items('for-each-release')",
                          "runAfter": {},
                          "type": "Compose"
                        },
                        "create-release": {
                          "inputs": {
                            "body": {
                              "organization": "[parameters('organization')]",
                              "pat": "@body('parse-pat')?['value']",
                              "project": "@items('for-each-release')['project']",
                              "environment": "@triggerBody()?['env']",
                              "releaseDefinitionId": "@items('for-each-release')['releaseDefinitionId']",
                              "description": "@concat('Automation for project ', items('for-each-release')['project'])",
                              "variables": {}
                            },
                            "host": {
                              "triggerName": "http-post",
                              "workflow": {
                                "id": "[resourceId('Microsoft.Logic/workflows', variables('Deploy Release App Name'))]"
                              }
                            },
                            "retryPolicy": {
                              "type": "none"
                            }
                          },
                          "runAfter": {
                            "current-release": [
                              "Succeeded"
                            ]
                          },
                          "type": "Workflow"
                        },
                        "set-error": {
                          "inputs": {
                            "name": "errorProject",
                            "value": "@items('for-each-release')['project']"
                          },
                          "runAfter": {
                            "create-release": [
                              "Failed"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@variables('errorProject')",
                              ""
                            ]
                          }
                        ]
                      },
                      "runAfter": {},
                      "type": "If"
                    }
                  },
                  "foreach": "@items('for-each-stage')['releases']",
                  "runAfter": {
                    "current-stage": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                }
              },
              "foreach": "@body('parse-project-configuration')",
              "runAfter": {
                "parse-project-configuration": [
                  "Succeeded"
                ],
                "init-errorProject": [
                  "Succeeded"
                ],
                "parse-pat": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "if-success": {
              "actions": {
                "response-success": {
                  "inputs": {
                    "body": "Done",
                    "statusCode": "@if(equals(variables('errorProject'), ''), 503, 200)"
                  },
                  "kind": "http",
                  "operationOptions": "Asynchronous",
                  "runAfter": {},
                  "type": "Response"
                }
              },
              "else": {
                "actions": {
                  "response-failure": {
                    "inputs": {
                      "body": {
                        "failedProject": "@variables('errorProject')"
                      },
                      "statusCode": 503
                    },
                    "kind": "http",
                    "operationOptions": "Asynchronous",
                    "runAfter": {},
                    "type": "Response"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('errorProject')",
                      ""
                    ]
                  }
                ]
              },
              "runAfter": {
                "for-each-stage": [
                  "Succeeded"
                ]
              },
              "type": "If"
            }
          },
          "parameters": {},
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {}
      }
    },
    {
      "name": "[variables('Release Apps')[copyIndex()].app]",
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "copy-rebuild-apps",
        "count": "[length(variables('Release Apps'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', variables('Release Env App Name'))]"
      ],
      "tags": {},
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "response-success": {
              "inputs": {
                "body": "[concat('<html><body>Request sent for ', variables('Release Apps')[copyIndex()].env, '</body></html>')]",
                "headers": {
                  "Content-Type": "text/html; charset=utf-8"
                },
                "statusCode": 200
              },
              "kind": "Http",
              "runAfter": {},
              "type": "Response"
            },
            "release-env-app": {
              "inputs": {
                "body": {
                  "env": "[variables('Release Apps')[copyIndex()].env]"
                },
                "host": {
                  "triggerName": "http-post",
                  "workflow": {
                    "id": "[resourceId('Microsoft.Logic/workflows', variables('Release Env App Name'))]"
                  }
                },
                "retryPolicy": {
                  "type": "none"
                }
              },
              "runAfter": {
                "response-success": [
                  "Succeeded"
                ]
              },
              "type": "Workflow"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {},
          "triggers": {
            "http-get": {
              "inputs": {
                "method": "GET",
                "schema": {}
              },
              "kind": "Http",
              "type": "Request"
            }
          }
        },
        "parameters": {}
      }
    }
  ],
  "outputs": {
    "Managed Identity": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Logic/workflows', variables('Get Secret App Name')), '2017-07-01', 'Full').identity]"
    }
  }
}